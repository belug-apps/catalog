---
# Source: helm-dashboard/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: helm-dashboard
  annotations:
    podAnnotations: enabled
  labels:
    app.kubernetes.io/name: helm-dashboard
    helm.sh/chart: helm-dashboard-1.1.1
    app.kubernetes.io/instance: helm-dashboard
    app.kubernetes.io/managed-by: Helm
    commonLabels01: enabled
    commonLabels02: enabled
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: helm-dashboard
      app.kubernetes.io/instance: helm-dashboard
      podLabels: enabled
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        podAnnotations: enabled
      labels:
        app.kubernetes.io/name: helm-dashboard
        app.kubernetes.io/instance: helm-dashboard
        podLabels: enabled
    spec:
      imagePullSecrets:
        - name: image-pull-secret
      serviceAccountName: helm-dashboard
      securityContext:
        runAsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
        seccompProfile:
          type: Unconfined
      containers:
        - name: helm-dashboard
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: false
            runAsGroup: 65463
            runAsNonRoot: true
            runAsUser: 65463
          image: ghcr.io/belug-apps/helm-dashboard/dashboard:1.0.0
          imagePullPolicy: IfNotPresent
          env:
            - name: HELM_CACHE_HOME
              value: /opt/dashboard/helm/cache
            - name: HELM_CONFIG_HOME
              value: /opt/dashboard/helm/config
            - name: HELM_DATA_HOME
              value: /opt/dashboard/helm/data
            - name: DEBUG
              value: "1"
          ports:
            - name: web
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /status
              port: web
          readinessProbe:
            httpGet:
              path: /status
              port: web
          resources:
            limits:
              cpu: 2
              memory: 2Gi
            requests:
              cpu: 10m
              memory: 10Mi
          volumeMounts:
            - name: data
              mountPath: /opt/dashboard/helm
            - name: cache
              mountPath: /.cache
            - name: tempdir
              mountPath: /tmp
      initContainers:
        - name: repositories-preloader
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: false
            runAsGroup: 65463
            runAsNonRoot: true
            runAsUser: 65463
          image: ghcr.io/belug-apps/helm-dashboard/dashboard:1.0.0
          imagePullPolicy: IfNotPresent
          command: ["/opt/bin/preload-repositories.sh"]
          env:
            - name: HELM_CONFIG_HOME
              value: /opt/dashboard/helm/config
          volumeMounts:
            - name: preload-script
              mountPath: /opt/bin
            - name: data
              mountPath: /opt/dashboard/helm
          workingDir: /opt/dashboard
      nodeSelector:
        kubernetes.io/os: linux
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: another-node-label-key
                operator: In
                values:
                - another-node-label-value
            weight: 1
      tolerations:
        - effect: NoSchedule
          key: foo.bar.com/role
          operator: Equal
          value: master
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: helm-dashboard
        - name: preload-script
          configMap:
            name: helm-dashboard-repositories-script
            defaultMode: 0744
        - name: cache
          emptyDir: {}
        - name: tempdir
          emptyDir: {}
